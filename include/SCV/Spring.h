#ifndef __SCV_SPRING_H__
#define __SCV_SPRING_H__

namespace scv {

class Spring {
public:
   ///////////////////////////////////////////////////////////
   enum Size {
      UNSET = INT_MIN,
      DEFAULT_SIZE = -1,
      PREFERRED_SIZE = -2
   };

   enum Axis {
      HORIZONTAL, VERTICAL
   };
   ///////////////////////////////////////////////////////////

   ///////////////////////////////////////////////////////////
   Spring(void);
   virtual ~Spring(void);
   ///////////////////////////////////////////////////////////

   ///////////////////////////////////////////////////////////
   virtual int calculateMinimumSize(Axis axis) = 0;
   virtual int calculatePreferredSize(Axis axis) = 0;
   virtual int calculateMaximumSize(Axis axis) = 0;
   ///////////////////////////////////////////////////////////

   ///////////////////////////////////////////////////////////
   int getMinimumSize(Axis axis);
   int getPreferredSize(Axis axis);
   int getMaximumSize(Axis axis);
   ///////////////////////////////////////////////////////////

protected:
   inline int constrain(int value);

   int _size, _min, _max, _pref;
private:
};

///////////////////////////////////////////////////////////
int Spring::constrain(int value) {
   return std::min(value, INT_MAX);   
}
///////////////////////////////////////////////////////////

} //namespace scv

#endif //__SCV_SPRING_H__